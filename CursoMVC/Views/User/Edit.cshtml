@model CursoMVC.Models.ViewModels.EditUserViewModel
@{
    ViewBag.Title = "Modificar usuario";
}

<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="col-md-12">

        @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { role = "form", @class = "" }))
        {
            @Html.HiddenFor(d=>d.Id) //mantenemos el id que se va a editar
            @Html.AntiForgeryToken() //Sirve para que no se hagan peticiones desde fuera, es SEGURIDAD para la app IMPORTANTE

            @Html.ValidationMessage("error", new { @class = "text-danger" }) //Esto crea un div que solo se muestra si hay un error

            //Esto arma el formulario desde los datos requeridos desde la clase userViewModel que se hizo anteriormente
            @Html.LabelFor(d => d.Email)
            @Html.TextBoxFor(d => d.Email, new { @class = "form-control" }) //El formato de esta linea es html.TipoInput(d=> (d representa la clase) d.VariableALLenar, new { @clasesParaControl = "llamado a estilos de CSS"})
            @Html.ValidationMessage("Email", new { @class = "text-danger" })<br /> //Mostrar un el mensaje de error

            @Html.LabelFor(d => d.Password)
            @Html.PasswordFor(d => d.Password, new { @class = "form-control" })
            @Html.ValidationMessage("Password", new { @class = "text-danger" })<br />

            @Html.LabelFor(d => d.ConfirmPassword)
            @Html.PasswordFor(d => d.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessage("ConfirmPassword", new { @class = "text-danger" })<br />

            @Html.LabelFor(d => d.Edad)
            @Html.TextBoxFor(d => d.Edad, new { @class = "form-control" })
            @Html.ValidationMessage("Edad", new { @class = "text-danger" })<br />

            <div style="text-align: right;">
                <input type="submit" class="btn btn-success" value="Guardar" />
            </div>
        }

    </div>
</div>